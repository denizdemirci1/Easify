apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    ext.major = 0
    ext.minor = 0
    ext.patch = 2

    defaultConfig {
        applicationId "com.deniz.easify"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode major * 10000 + minor * 100 + patch
        versionName String.valueOf(major) + "." + String.valueOf(minor) + "." + String.valueOf(patch)
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/kotlin'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    buildTypes {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def spotify_client_id = properties.getProperty('spotify_client_id')
        def spotify_client_secret = properties.getProperty('spotify_client_secret')

        debug {
            debuggable true
            minifyEnabled false
            buildConfigField "String", "SPOTIFY_CLIENT_ID", spotify_client_id
            buildConfigField "String", "SPOTIFY_CLIENT_SECRET", spotify_client_secret
        }
        release {
            minifyEnabled false
            buildConfigField "String", "SPOTIFY_CLIENT_ID", spotify_client_id
            buildConfigField "String", "SPOTIFY_CLIENT_SECRET", spotify_client_secret
        }
    }

    buildTypes.all {
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }
}

ktlint {
    version = "0.35.0"
    debug = true
    verbose = true
    android = true
    outputToConsole = true
    disabledRules = ["max-line-length", "no-wildcard-imports"]
    filter {
        exclude("**/generated/**")
        include("**/java/**")
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Spotify
    implementation project(':spotify-app-remote')
    implementation "com.spotify.android:auth:$spotify_auth_version"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // AndroidX
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.multidex:multidex:$multidex_version"
    implementation "androidx.appcompat:appcompat:$appCompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    // Data Binding
    kapt "com.android.databinding:compiler:$data_binding_version"

    //Retrofit & OkHttp
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"

    // Google
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.google.firebase:firebase-analytics:$firebase_version"
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics_version"

    // Koin
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    //Material Dialog
    implementation "com.afollestad.material-dialogs:core:$material_dialog_version"

    // Rounded Image
    implementation "com.makeramen:roundedimageview:$rounded_image_version"


    // Dependencies for local unit tests
    testImplementation "junit:junit:$test_junit_version"
    testImplementation "io.mockk:mockk:$test_mockk_version"
    testImplementation "org.hamcrest:hamcrest-all:$test_hamcrest_version"
    testImplementation "androidx.arch.core:core-testing:$test_arch_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "com.google.truth:truth:$test_truth_version"

    // UI Tests
    androidTestImplementation "androidx.navigation:navigation-testing:$test_navigation_version"
    androidTestImplementation "androidx.navigation:navigation-runtime-ktx:$test_navigation_version"
    androidTestImplementation "org.mockito:mockito-android:$test_mockito_version"
    androidTestImplementation "io.mockk:mockk-android:$test_mockk_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "androidx.fragment:fragment-testing:$test_fragment_version"
    androidTestImplementation "org.robolectric:annotations:$test_robolectric_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_espresso_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.ext:junit:$test_junit_ext_version"

    debugImplementation "androidx.fragment:fragment-testing:$test_fragment_version"
    debugImplementation "androidx.test:core:$test_core_version"
}

apply plugin: 'com.google.gms.google-services'